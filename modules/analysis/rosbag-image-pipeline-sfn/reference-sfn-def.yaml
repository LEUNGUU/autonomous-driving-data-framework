
Comment: A description of my state machine
StartAt: Pass
States:
  Pass:
    Type: Pass
    Parameters:
      startTime.$: $$.Execution.StartTime
      execName.$: $$.Execution.Name
      drivesCount.$: States.ArrayLength($.drives_to_process)
    ResultPath: $.executionContext
    Next: Query Batch Id
  Query Batch Id:
    Type: Task
    Next: Choice
    Parameters:
      TableName: addf-aws-solutions-analysis-rip-drive-tracking
      KeyConditionExpression: pk = :pk
      ExpressionAttributeValues:
        ':pk':
          S.$: $.executionContext.execName
    Resource: arn:aws:states:::aws-sdk:dynamodb:query
    ResultPath: $.ddbCount
  Choice:
    Type: Choice
    Choices:
      - Variable: $.ddbCount.Count
        NumericGreaterThan: 0
        Next: Continue With Existing DDB Item
    Default: Map Each Driver
  Map Each Driver:
    Type: Map
    ItemProcessor:
      ProcessorConfig:
        Mode: INLINE
      StartAt: For Each S3 Key in Path
      States:
        For Each S3 Key in Path:
          Type: Map
          ItemProcessor:
            ProcessorConfig:
              Mode: DISTRIBUTED
              ExecutionType: STANDARD
            StartAt: BatchWriteItem
            States:
              BatchWriteItem:
                Type: Task
                Resource: arn:aws:states:::dynamodb:putItem
                Parameters:
                  TableName: addf-aws-solutions-analysis-rip-drive-tracking
                  Item:
                    pk:
                      S.$: $.execName
                    sk:
                      S.$: $.index
                    drive_id:
                      S.$: $.drive
                    file_id:
                      S.$: >-
                        States.ArrayGetItem(States.StringSplit($.Key.Key, '/'),
                        States.MathAdd(States.ArrayLength(States.StringSplit($.Key.Key,
                        '/')), -1))
                    s3_bucket:
                      S.$: $.bucket
                    s3_key:
                      S.$: $.Key.Key
                End: true
          Label: ForEachS3KeyinPath
          MaxConcurrency: 1000
          ItemReader:
            Resource: arn:aws:states:::s3:listObjectsV2
            Parameters:
              Bucket.$: $.s3.bucket
              Prefix.$: $.s3.prefix
          End: true
          ItemSelector:
            drive.$: $.s3.drive
            bucket.$: $.s3.bucket
            index.$: States.Format('{}',$.index)
            execName.$: $.execName
            Key.$: $$.Map.Item.Value
          ResultPath: $.additional
    Next: StartProcessing
    ItemsPath: $.drives_to_process
    ItemSelector:
      execName.$: $.executionContext.execName
      index.$: $$.Map.Item.Index
      s3.$: States.ArrayGetItem($.drives_to_process, $$.Map.Item.Index)
    ResultPath: null
  Continue With Existing DDB Item:
    Type: Pass
    Next: ListObjectsV2
  ListObjectsV2:
    Type: Task
    Next: StartProcessing
    Parameters:
      Bucket.$: $.bucket
      Prefix.$: $.prefix
    Resource: arn:aws:states:::aws-sdk:s3:listObjectsV2
    ResultPath: $.keys
    ResultSelector:
      keys.$: $.Contents[*].['Key']
  StartProcessing:
    Type: Parallel
    Branches:
      - StartAt: ImageExtractionBatchJob
        States:
          ImageExtractionBatchJob:
            Type: Task
            Resource: arn:aws:states:::batch:submitJob.sync
            Parameters:
              JobName: test-ros-image-pipeline-png
              JobDefinition: >-
                arn:aws:batch:us-east-1:111111111111:job-definition/addf-aws-solutions-docker-images-ros-to-png:2
              JobQueue: >-
                arn:aws:batch:us-east-1:111111111111:job-queue/addf-aws-solutions-core-batch-compute-OnDemandJobQueue
              ArrayProperties:
                Size.$: $.executionContext.drivesCount
              ContainerOverrides:
                Environment:
                  - Name: TABLE_NAME
                    Value: addf-aws-solutions-analysis-rip-drive-tracking
                  - Name: BATCH_ID
                    Value.$: $.executionContext.execName
                  - Name: DEBUG
                    Value: 'true'
                  - Name: IMAGE_TOPICS
                    Value: >-
                      ["/flir_adk/rgb_front_left/image_raw",
                      "/flir_adk/rgb_front_right/image_raw"]
                  - Name: DESIRED_ENCODING
                    Value: bgr8
                  - Name: TARGET_BUCKET
                    Value: addf-aws-solutions-intermediate-bucket-f4efdad4
            Next: GetImageDirectories
            ResultPath: null
          GetImageDirectories:
            Type: Task
            Parameters:
              TableName: addf-aws-solutions-analysis-rip-drive-tracking
              KeyConditionExpression: pk = :pk
              ProjectionExpression: resized_image_dirs
              ExpressionAttributeValues:
                ':pk':
                  S.$: $.executionContext.execName
            Resource: arn:aws:states:::aws-sdk:dynamodb:query
            Next: Map
            ResultPath: $.ImageDirs
            ResultSelector:
              S3Paths.$: $.Items[*][*].[*][*].S
          Map:
            Type: Map
            ItemProcessor:
              ProcessorConfig:
                Mode: INLINE
              StartAt: Parallel (1)
              States:
                Parallel (1):
                  Type: Parallel
                  Branches:
                    - StartAt: Lane Detection SageMaker Job
                      States:
                        Lane Detection SageMaker Job:
                          Type: Task
                          Resource: arn:aws:states:::sagemaker:createProcessingJob.sync
                          Parameters:
                            ProcessingJobName.$: States.Format('lanedet-{}', States.UUID())
                            AppSpecification:
                              ContainerArguments:
                                - '--save_dir'
                                - /opt/ml/processing/output/image
                                - '--source'
                                - /opt/ml/processing/input/image
                                - '--json_path'
                                - /opt/ml/processing/output/json
                                - '--csv_path'
                                - /opt/ml/processing/output/csv
                              ImageUri: >-
                                111111111111.dkr.ecr.us-east-1.amazonaws.com/addf-aws-solutions-docker-images-lane-detection:smprocessor
                            ProcessingResources:
                              ClusterConfig:
                                InstanceCount: 1
                                InstanceType: ml.m5.2xlarge
                                VolumeSizeInGB: 30
                            NetworkConfig:
                              VpcConfig:
                                SecurityGroupIds:
                                  - sg-03e5b51e832737fea
                                Subnets:
                                  - subnet-0b5966d0e3a07f617
                                  - subnet-04ed277c09f223172
                                  - subnet-08e9bd75f8025d426
                            ProcessingInputs:
                              - InputName: data
                                S3Input:
                                  LocalPath: /opt/ml/processing/input/image
                                  S3DataType: S3Prefix
                                  S3DataDistributionType: FullyReplicated
                                  S3InputMode: File
                                  S3Uri.$: >-
                                    States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}/',
                                    $.path)
                            ProcessingOutputConfig:
                              Outputs:
                                - OutputName: image_output
                                  S3Output:
                                    S3UploadMode: EndOfJob
                                    LocalPath: /opt/ml/processing/output/image
                                    S3Uri.$: >-
                                      States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}_post_lane_dets/',
                                      $.path)
                                - OutputName: json_output
                                  S3Output:
                                    S3UploadMode: EndOfJob
                                    LocalPath: /opt/ml/processing/output/json
                                    S3Uri.$: >-
                                      States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}_post_lane_dets/',
                                      $.path)
                                - OutputName: csv_output
                                  S3Output:
                                    S3UploadMode: EndOfJob
                                    LocalPath: /opt/ml/processing/output/csv
                                    S3Uri.$: >-
                                      States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}_post_lane_dets/',
                                      $.path)
                            RoleArn: >-
                              arn:aws:iam::111111111111:role/addf-aws-solutions-docker-addfawssolutionsdockerima-LdTSrSyY3TS6
                            StoppingCondition:
                              MaxRuntimeInSeconds: 86400
                          End: true
                          ResultPath: null
                    - StartAt: Object Detection SageMaker Job
                      States:
                        Object Detection SageMaker Job:
                          Type: Task
                          Resource: arn:aws:states:::sagemaker:createProcessingJob.sync
                          Parameters:
                            ProcessingJobName.$: States.Format('yolo-{}', States.UUID())
                            AppSpecification:
                              ContainerArguments:
                                - '--model'
                                - yolov5s
                              ImageUri: >-
                                111111111111.dkr.ecr.us-east-1.amazonaws.com/addf-aws-solutions-docker-images-object-detection:latest
                            ProcessingResources:
                              ClusterConfig:
                                InstanceCount: 1
                                InstanceType: ml.m5.xlarge
                                VolumeSizeInGB: 30
                            NetworkConfig:
                              VpcConfig:
                                SecurityGroupIds:
                                  - sg-03e5b51e832737fea
                                Subnets:
                                  - subnet-0b5966d0e3a07f617
                                  - subnet-04ed277c09f223172
                                  - subnet-08e9bd75f8025d426
                            ProcessingInputs:
                              - InputName: data
                                S3Input:
                                  LocalPath: /opt/ml/processing/input/
                                  S3DataDistributionType: FullyReplicated
                                  S3InputMode: File
                                  S3DataType: S3Prefix
                                  S3Uri.$: >-
                                    States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}/',
                                    $.path)
                            ProcessingOutputConfig:
                              Outputs:
                                - OutputName: output
                                  S3Output:
                                    S3UploadMode: EndOfJob
                                    LocalPath: /opt/ml/processing/output/
                                    S3Uri.$: >-
                                      States.Format('s3://addf-aws-solutions-intermediate-bucket-f4efdad4/{}_post_obj_dets/',
                                      $.path)
                            RoleArn: >-
                              arn:aws:iam::111111111111:role/addf-aws-solutions-docker-addfawssolutionsdockerima-q1OOkTsP9Smy
                            StoppingCondition:
                              MaxRuntimeInSeconds: 86400
                          End: true
                          ResultPath: null
                  End: true
            Next: Pass (1)
            ResultPath: null
            ItemsPath: $.ImageDirs.S3Paths
            ItemSelector:
              path.$: $$.Map.Item.Value
          Pass (1):
            Type: Pass
            Next: Scene Detection
            Parameters:
              EMRArgs.$: >-
                States.Array('--batch-id', $.executionContext.execName,
                '--batch-metadata-table-name',
                'addf-aws-solutions-analysis-rip-drive-tracking',
                '--output-bucket',
                'addf-aws-solutions-intermediate-bucket-f4efdad4','--region','us-east-1','--output-dynamo-table','addf-aws-solutions-core-metadata-storage-Rosbag-Scene-Metadata','--image-topics','["/flir_adk/rgb_front_left/image_raw",
                "/flir_adk/rgb_front_right/image_raw"]')
            ResultPath: $.EMR
          Scene Detection:
            Type: Task
            Resource: arn:aws:states:::emr-serverless:startJobRun.sync
            Parameters:
              ApplicationId: 00fghi4h6pofnj09
              ExecutionRoleArn: >-
                arn:aws:iam::111111111111:role/addf-aws-solutions-core-e-addfawssolutionscoreemrse-BCUZtYmiQKB7
              JobDriver:
                SparkSubmit:
                  EntryPoint: >-
                    s3://addf-aws-solutions-artifacts-bucket-f4efdad4/dags/aws-solutions/analysis-rip/image_dags/detect_scenes.py
                  EntryPointArguments.$: $.EMR.EMRArgs
                  SparkSubmitParameters: >-
                    --jars
                    s3://addf-aws-solutions-artifacts-bucket-f4efdad4/dags/aws-solutions/analysis-rip/image_dags/spark-dynamodb_2.12-1.1.1.jar
              ConfigurationOverrides:
                MonitoringConfiguration:
                  ManagedPersistenceMonitoringConfiguration:
                    Enabled: true
                  S3MonitoringConfiguration:
                    LogUri: >-
                      s3://addf-aws-solutions-logs-bucket-f4efdad4/scene-detection
            End: true
      - StartAt: ParquetExtractionBatchJob
        States:
          ParquetExtractionBatchJob:
            Type: Task
            Resource: arn:aws:states:::batch:submitJob.sync
            Parameters:
              JobName: test-ros-image-pipeline-parq
              JobDefinition: >-
                arn:aws:batch:us-east-1:111111111111:job-definition/addf-aws-solutions-docker-images-ros-to-parquet:1
              JobQueue: >-
                arn:aws:batch:us-east-1:111111111111:job-queue/addf-aws-solutions-core-batch-compute-FargateJobQueue
              ArrayProperties:
                Size.$: $.executionContext.drivesCount
              ContainerOverrides:
                Environment:
                  - Name: TABLE_NAME
                    Value: addf-aws-solutions-analysis-rip-drive-tracking
                  - Name: BATCH_ID
                    Value.$: $.executionContext.execName
                  - Name: TOPICS
                    Value: >-
                      ["/vehicle/gps/fix", "/vehicle/gps/time",
                      "/vehicle/gps/vel", "/imu_raw"]
                  - Name: TARGET_BUCKET
                    Value: addf-aws-solutions-intermediate-bucket-f4efdad4
            End: true
            ResultPath: null
    End: true