deploy:
  phases:
    install:
      commands:
      - npm install -g aws-cdk@2.20.0
      - pip install -r requirements.txt
    build:
      commands:
      - cdk deploy --require-approval never --progress events --app "python app.py" --outputs-file ./cdk-exports.json
      # Here we export some env vars
      - export ADDF_MODULE_METADATA=$(python -c "import json; file=open('cdk-exports.json'); print(json.load(file)['addf-${ADDF_DEPLOYMENT_NAME}-${ADDF_MODULE_NAME}']['metadata'])")
      - export ECR_REPO_NAME=$(echo ${ADDF_MODULE_METADATA} | jq -r ".EcrRepoName")
      - export IMAGE_URI=$(echo ${ADDF_MODULE_METADATA} | jq -r ".ImageUri")
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$CDK_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME
      - export COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=${COMMIT_HASH:=latest}
      # - Building the Docker image(s)...
      - aws ecr get-login-password --region $CDK_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$CDK_DEFAULT_REGION.amazonaws.com
      - cd src && docker build -t $IMAGE_URI . 
      - docker tag $IMAGE_URI $REPOSITORY_URI:$IMAGE_TAG
      - docker push $IMAGE_URI && docker push $REPOSITORY_URI:$IMAGE_TAG
destroy:
  phases:
    install:
      commands:
      - npm install -g aws-cdk@2.20.0
      - pip install -r requirements.txt
    build:
      commands:
      - cdk destroy --force --app "python app.py"
build_type: BUILD_GENERAL1_LARGE

